/// Wrapper representing the raw bytes of an ANSI escape sequence.  ``AnsiSequence``
/// conforms to ``RawRepresentable`` and string literal protocols so constants can
/// be declared succinctly while still benefitting from type safety.
public struct AnsiSequence : RawRepresentable, ExpressibleByStringLiteral, Equatable {
  public typealias StringLiteralType = String

  public let rawValue : String
  public var content  : String { rawValue }

  /// Creates a sequence from the provided raw string.
  public init ( rawValue: String ) {
    self.rawValue = rawValue
  }

  /// Allows string literals to be implicitly converted into sequences.
  public init ( stringLiteral value: StringLiteralType ) {
    self.rawValue = value
  }

  /// Concatenates the escape codes generated by an array of ``TerminalCommand``
  /// values into a single sequence that can be rendered in one pass.
  public static func from ( _ commands: [TerminalCommand] ) -> AnsiSequence {
    let combined = commands.map { $0.sequence.rawValue }.joined()
    return AnsiSequence(rawValue: combined)
  }
}
